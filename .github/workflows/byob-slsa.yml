name: "RELEASE: Make Draft Release"

on:
  push:
    tags:
    - v[0-9]+.[0-9]+.[0-9]+-slsa-*

permissions: read-all

jobs:
  draft_release:
    name: draft release
    runs-on: ubuntu-latest

    permissions:
      attestations: write
      contents: write
      id-token: write
      packages: write
      pull-requests: write

    steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ^1.23

    - name: Goreleaser release
      id: release
      uses: goreleaser/goreleaser-action@v6
      with:
        version: latest
        args: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: |
          dist/**/*wtutf*tar.gz
          dist/**/*wtutf*zip
          dist/**/*wtutf*checksums.txt

    - run: |
        echo "goreleaser metadata"
        echo ${{ steps.release.outputs.metadata }}
        echo "goreleaser artifacts"
        echo ${{ steps.release.outputs.artifacts }}
        echo "attestation document"
        cat /tmp/attestation.json

    #- name: Generate container attestation
    #  uses: actions/attest-build-provenance@v2
    #  with:
    #    subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    #    # todo: figure out where goreleaser stores the image sha
    #    subject-digest: ${{ fromJson(steps.release.outputs.metadata).somekey }}
    #    push-to-registry: true
