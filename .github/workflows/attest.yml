# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: "CALL: Sign Artifact"

on:
  workflow_call:
    inputs:

      artifact-upload-name:
        description: The name of the uploaded artifact bundle. Required if subject-checksums or subject-path is provided.
        type: string
    
      artifact-restore-path:
        description: The local path to restore the artifact bundle. Required if subject-checksums or subject-path is provided.
        type: string

      subject-path:
        required: false
        type: string

      subject-name:
        required: false
        type: string

      subject-digest:
        required: false
        type: string

      subject-checksums:
        required: false
        type: string

      push-to-registry:
        required: false
        type: boolean

      show-summary:
        required: false
        type: boolean

    outputs:
      attestation-url:
        value: ${{ jobs.sign-artifact.outputs.attestation-url }}

      attestation-id:
        value: ${{ jobs.sign-artifact.outputs.attestation-id }}

      bundle-path:
        value: ${{ jobs.sign-artifact.outputs.bundle-path }}

permissions:
  contents: read

jobs:
  sign-artifact:
    name: Sign Artifacts

    outputs:
      attestation-url: ${{ steps.collect.outputs.attestation-url }}
      attestation-id: ${{ steps.collect.outputs.attestation-id }}
      bundle-path: ${{ steps.collect.outputs.bundle-path }}

    runs-on: ubuntu-latest

    permissions:
      id-token: write
      attestations: write
      contents: read

    steps:

    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Validate inputs
      id: validate-inputs
      env:
        SUBJECT_NAME: ${{ inputs.subject-name }}
        SUBJECT_PATH: ${{ inputs.subject-path }}
        SUBJECT_DIGEST: ${{ inputs.subject-digest }}
        SUBJECT_CHECKSUMS: ${{ inputs.subject-checksums }}
        ARTIFACT_RESTORE_PATH: ${{ inputs.artifact-restore-path }}
        ARTIFACT_UPLOAD_NAME: ${{ inputs.artifact-upload-name }}
        PUSH_TO_REGISTRY: ${{ inputs.push-to-registry }}
        SHOW_SUMMARY: ${{ inputs.show-summary }}
      run: |
        satisfied_args=false
        restore_artifacts=false
        if [ -n "$SUBJECT_CHECKSUMS" ]; then
          if [ -n "$SUBJECT_NAME" ] || [ -n "$SUBJECT_PATH" ]; then
            echo "Error: If subject-checksums is provided, subject-name and subject-path must not be provided."
            exit 1
          fi
          if [ -z "$ARTIFACT_RESTORE_PATH" ] || [ -z "$ARTIFECT_UPLOAD_NAME" ]; then
            echo "Error: If subject-checksums is provided, artifact-restore-path and artifact-upload-name must be provided."
            exit 1
          fi
          restore_artifacts=true
          satisfied_args=true
        fi

        if [ -n "$SUBJECT_PATH" ]; then
          if [ -n "$SUBJECT_NAME" ] || [ -n "$SUBJECT_CHECKSUMS" ]; then
            echo "Error: If subject-path is provided, subject-name and subject-checksums must not be provided."
            exit 1
          fi
          if [ -z "$ARTIFACT_RESTORE_PATH" ] || [ -z "$ARTIFACT_UPLOAD_NAME" ]; then
            echo "Error: If subject-checksums is provided, artifact-restore-path and artifact-upload-name must be provided."
            exit 1
          fi
          restore_artifacts=true
          satisfied_args=true
        fi

        if [ -n "$SUBJECT_DIGEST" ]; then
          if [ -z "$SUBJECT_NAME" ]; then
            echo "Error: If subject-digest is provided, subject-name must be provided."
            exit 1
          fi
          if [ -n "$SUBJECT_PATH" ] || [ -n "$SUBJECT_CHECKSUMS" ]; then
            echo "Error: If subject-digest is provided, subject-path and subject-checksums must not be provided."
            exit 1
          fi
          satisfied_args=true
        fi

        if [ "$satisfied_args" == "false" ]; then
          echo "Error: At least one of subject-path, subject-name, or subject-checksums must be provided."
          exit 1
        fi

        echo "restore-artifacts=$restore_artifacts" >> "$GITHUB_OUTPUT"

        echo "restore-artifacts=$restore_artifacts"
        echo "artifact-upload-name=$ARTIFACT_UPLOAD_NAME"
        echo "artifact-restore-path=$ARTIFACT_RESTORE_PATH"
        echo "subject-path=$SUBJECT_PATH"
        echo "subject-digest=$SUBJECT_DIGEST"
        echo "subject-name=$SUBJECT_NAME"
        echo "subject-checksums=$SUBJECT_CHECKSUMS"
        echo "push-to-registry=$PUSH_TO_REGISTRY"
        echo "show-summary=$SHOW_SUMMARY"

    # Download the artifacts uploaded by the build job
    - name: Download build artifacts
      id: download-artifacts
      if: steps.validate-inputs.outputs.restore-artifacts == 'true'
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: ${{ inputs.artifact-upload-name }}
        path: ${{ inputs.artifact-restore-path }}

    - name: Attest Build Provenance
      id: attest
      uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
      with:
        subject-path: ${{ inputs.subject-path }}
        subject-checksums: ${{ inputs.subject-checksums }}
        push-to-registry: ${{ inputs.push-to-registry }}
        show-summary: ${{ inputs.show-summary }}
        subject-name: ${{ inputs.subject-name }}
        subject-digest: ${{ inputs.subject-digest }}

    - name: Set outputs
      id: collect
      env:
        ATTESTATION_URL: ${{ steps.attest.outputs.attestation-url }}
        ATTESTATION_ID: ${{ steps.attest.outputs.attestation-id }}
        BUNDLE_PATH: ${{ steps.attest.outputs.bundle-path }}
      run: |
        echo "attestation-url=$ATTESTATION_URL" >> $GITHUB_OUTPUT
        echo "attestation-id=$ATTESTATION_ID" >> $GITHUB_OUTPUT
        echo "bundle-path=$BUNDLE_PATH" >> $GITHUB_OUTPUT
